/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package o_osoftwaresuite;

import framescroller.Positioning1;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author SAMUEL
 */
public class O_OManagerZone extends javax.swing.JFrame {

    /**
     * Creates new form O_OManagerZone
     */
    public O_OManagerZone() {
        initComponents();
        initConnection();
        enableScroller();
    getSystemDate();
    
    upDateButton.setVisible(false);
    
    retrUpPanel.setVisible(false);
    cSetAddTField.setVisible(false);
cAddButton.setVisible(false);
    }

	
	
	
    private void enableScroller() {
        Positioning1 positioning1 = new Positioning1(this);
        positioning1.setShouldDoMove(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        systemDate = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        managerTab = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cNameCustSetUpTField = new javax.swing.JTextField();
        cTypeCusSetUpTField = new javax.swing.JComboBox();
        cLocationSetUpCustomerTField = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        phoneTField = new javax.swing.JTextField();
        cIdTField = new javax.swing.JTextField();
        cSetAddTField = new javax.swing.JTextField();
        cAddButton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        catTable = new javax.swing.JTable();
        prodTypeCombo = new javax.swing.JComboBox();
        cashEquiTField = new javax.swing.JTextField();
        branchCombo = new javax.swing.JComboBox();
        prodIDTField = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        prodPanel = new javax.swing.JPanel();
        cName = new javax.swing.JTextField();
        currentSoldQty = new javax.swing.JTextField();
        qtyLeftTField = new javax.swing.JTextField();
        goodsCashEqui = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        unitPriceTField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        percentageTField = new javax.swing.JTextField();
        amtPaid = new javax.swing.JTextField();
        totSalesTField = new javax.swing.JTextField();
        invNoTField = new javax.swing.JTextField();
        ledgBalTField = new javax.swing.JTextField();
        recNoTFielld = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        invoicePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        invDateLabel = new javax.swing.JLabel();
        billerInvNo = new javax.swing.JLabel();
        billerName = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        totAmtInvLabel = new javax.swing.JLabel();
        amtRecInvLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        printLedgBal = new javax.swing.JTextField();
        discTField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        totCashRecTodTField = new javax.swing.JTextField();
        todaySalesMinusDisc = new javax.swing.JTextField();
        todaysCashPlusDiscount = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        upDateTrancCombo = new javax.swing.JComboBox();
        retrTField = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        retrScroll = new javax.swing.JScrollPane();
        retrUpPanel = new javax.swing.JPanel();
        amtRecUpDateTField = new javax.swing.JTextField();
        upDateButton = new javax.swing.JButton();
        markPayment = new javax.swing.JCheckBox();
        ledgUpBalaTField = new javax.swing.JTextField();
        retrLastAmtReceived = new javax.swing.JLabel();
        retrLocationUpdate = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        custDetTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        selecRetrCombo = new javax.swing.JComboBox();
        jButton14 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        managerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        systemDate.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        systemDate.setForeground(new java.awt.Color(102, 0, 0));
        systemDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        systemDate.setText("..");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pix/icons/o_o loggo.JPG"))); // NOI18N

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Traditional Arabic", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("GENERAL ENTERPRISE I");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pix/gnome_panel_force_quit.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pix/navigate-down-icon.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        managerTab.setBackground(new java.awt.Color(255, 255, 255));
        managerTab.setForeground(new java.awt.Color(102, 0, 0));
        managerTab.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "customerPanel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        cNameCustSetUpTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Customer Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        cTypeCusSetUpTField.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        cTypeCusSetUpTField.setForeground(new java.awt.Color(102, 0, 0));
        cTypeCusSetUpTField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select Type of Customer---", "WholeSalers", "SubDealers", "VSR(Van Sales Representative)", "MSR(Market Sales Representative)", "TSR(Tricycle Sales Representative)", "BSR(Bike Sales Representative)" }));
        cTypeCusSetUpTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cTypeCusSetUpTFieldActionPerformed(evt);
            }
        });

        cLocationSetUpCustomerTField.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        cLocationSetUpCustomerTField.setForeground(new java.awt.Color(102, 0, 0));
        cLocationSetUpCustomerTField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select Customer Location---", "Katsina Branch", "Funtua Branch", "Jibia Branch", "Add More" }));
        cLocationSetUpCustomerTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cLocationSetUpCustomerTFieldActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton4.setForeground(new java.awt.Color(102, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pix/icons/1rightarrow_hover.png"))); // NOI18N
        jButton4.setText("SET UP CUSTOMER");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        phoneTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Customer Phone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        cIdTField.setEditable(false);
        cIdTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Customer Id[*click once for Id]", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        cIdTField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cIdTFieldMouseClicked(evt);
            }
        });

        cSetAddTField.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        cSetAddTField.setForeground(new java.awt.Color(102, 0, 0));
        cSetAddTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add More", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        cAddButton.setText("Add > >");
        cAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cAddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(47, 47, 47))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cLocationSetUpCustomerTField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(cSetAddTField, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                    .addComponent(cTypeCusSetUpTField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cNameCustSetUpTField, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                        .addComponent(phoneTField)
                        .addComponent(cIdTField)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cAddButton)
                .addGap(55, 55, 55))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cNameCustSetUpTField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(phoneTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(cIdTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cTypeCusSetUpTField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cLocationSetUpCustomerTField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cSetAddTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cAddButton)
                .addGap(27, 27, 27)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton6.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton6.setForeground(new java.awt.Color(102, 0, 0));
        jButton6.setText("NEXT   >   >   >   >");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(712, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(118, 118, 118))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129)
                .addComponent(jButton6)
                .addContainerGap(1071, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel7);

        managerTab.addTab("SET UP NEW CUSTOMER PORTAL", jScrollPane3);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        catTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Description", "Qty Sold", "Unit Price(NGN)", "Invoice Amount(NGN)"
            }
        ));
        jScrollPane4.setViewportView(catTable);

        prodTypeCombo.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        prodTypeCombo.setForeground(new java.awt.Color(102, 0, 0));
        prodTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select Product Sold---", "CARRY PACK NEW BORN(12 * 10)", "CARRY PACK MINI(10 * 10)", "CARRY PACK MEDIUM(9 * 10)", "CARRY PACK MAXI(8 * 10)", "CARRY PACK JNR(7 * 10)", "ECO PACK NEW BORN(52 * 4)", "ECO PACK MINI(42 * 4)", "ECO PACK MEDIUM(38 * 4)", "ECO  PACK MAXI(34 * 4)", "ECO PACK JNR(30 * 4)", "JUMBO PACK NEW BORN(105 * 3)", "JUMBO PACK MINI(100 * 3)", "JUMBO PACK MEDIUM(92 * 3)", "JUMBO PACK MAXI(84 * 3)", "JUMBO PACK JNR(74 * 3)" }));
        prodTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodTypeComboActionPerformed(evt);
            }
        });

        cashEquiTField.setEditable(false);
        cashEquiTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cash Equivalent", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        cashEquiTField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cashEquiTFieldMouseClicked(evt);
            }
        });

        branchCombo.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        branchCombo.setForeground(new java.awt.Color(102, 0, 0));
        branchCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select Location---", "Katsina Branch", "Funtua Branch", "Jibia Branch" }));
        branchCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branchComboActionPerformed(evt);
            }
        });

        prodIDTField.setEditable(false);
        prodIDTField.setToolTipText("");
        prodIDTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product ID(*non editable)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        prodPanel.setBackground(new java.awt.Color(255, 255, 255));
        prodPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Products Sold", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        prodPanel.setForeground(new java.awt.Color(102, 0, 0));
        prodPanel.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N

        cName.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        cName.setForeground(new java.awt.Color(102, 0, 0));
        cName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Customer Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        currentSoldQty.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Qty", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        currentSoldQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentSoldQtyActionPerformed(evt);
            }
        });
        currentSoldQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                currentSoldQtyKeyReleased(evt);
            }
        });

        qtyLeftTField.setEditable(false);
        qtyLeftTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Qty Left", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        qtyLeftTField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                qtyLeftTFieldMouseClicked(evt);
            }
        });
        qtyLeftTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyLeftTFieldActionPerformed(evt);
            }
        });

        goodsCashEqui.setEditable(false);
        goodsCashEqui.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Amount Equivalent", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        goodsCashEqui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goodsCashEquiMouseClicked(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 0));
        jButton1.setText("RECORD  >   >   >   >");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        unitPriceTField.setEditable(false);
        unitPriceTField.setToolTipText("");
        unitPriceTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product Unit Price", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        javax.swing.GroupLayout prodPanelLayout = new javax.swing.GroupLayout(prodPanel);
        prodPanel.setLayout(prodPanelLayout);
        prodPanelLayout.setHorizontalGroup(
            prodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(prodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(prodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goodsCashEqui, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(prodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                        .addComponent(unitPriceTField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(currentSoldQty, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(qtyLeftTField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(prodPanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        prodPanelLayout.setVerticalGroup(
            prodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(prodPanelLayout.createSequentialGroup()
                .addComponent(cName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(unitPriceTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(currentSoldQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(goodsCashEqui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(qtyLeftTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton1)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        jScrollPane5.setViewportView(prodPanel);

        jButton2.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pix/icons/1rightarrow_hover.png"))); // NOI18N
        jButton2.setText("RAISE INVOICE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        percentageTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Percentage(%)[*numbers]", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        percentageTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentageTFieldActionPerformed(evt);
            }
        });

        amtPaid.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Amount Paid", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        amtPaid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                amtPaidMouseReleased(evt);
            }
        });

        totSalesTField.setEditable(false);
        totSalesTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total Sales(NGN)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        totSalesTField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totSalesTFieldMouseClicked(evt);
            }
        });
        totSalesTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totSalesTFieldActionPerformed(evt);
            }
        });

        invNoTField.setEditable(false);
        invNoTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "InvoiceNo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        invNoTField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invNoTFieldMouseClicked(evt);
            }
        });
        invNoTField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invNoTFieldActionPerformed(evt);
            }
        });

        ledgBalTField.setEditable(false);
        ledgBalTField.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        ledgBalTField.setForeground(new java.awt.Color(102, 0, 0));
        ledgBalTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Balance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        ledgBalTField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ledgBalTFieldMouseClicked(evt);
            }
        });

        recNoTFielld.setEditable(false);
        recNoTFielld.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ReceiptNo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        recNoTFielld.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recNoTFielldMouseClicked(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton7.setForeground(new java.awt.Color(102, 0, 0));
        jButton7.setText("<   <   <   B   A   C   K");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton8.setForeground(new java.awt.Color(102, 0, 0));
        jButton8.setText("NEXT   >   >   >");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton12.setForeground(new java.awt.Color(102, 0, 0));
        jButton12.setText("Clear All Entry");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton13.setForeground(new java.awt.Color(102, 0, 0));
        jButton13.setText("Remove Selected Row");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(prodTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14)
                            .addComponent(cashEquiTField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(branchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(prodIDTField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(percentageTField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addGap(40, 40, 40)
                                            .addComponent(jButton12))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButton13)))
                                    .addContainerGap(324, Short.MAX_VALUE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(totSalesTField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(amtPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ledgBalTField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(52, 52, 52))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                            .addComponent(recNoTFielld, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(26, 26, 26)
                                            .addComponent(invNoTField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jButton8)
                                                .addComponent(jButton2))))
                                    .addContainerGap(537, Short.MAX_VALUE)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jButton7)
                        .addContainerGap(1246, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cashEquiTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(branchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(prodIDTField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(percentageTField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(jButton7))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jButton8))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jButton13)
                                .addGap(48, 48, 48)
                                .addComponent(jButton12)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totSalesTField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ledgBalTField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(amtPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(recNoTFielld, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(invNoTField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        jScrollPane1.setViewportView(jPanel5);

        managerTab.addTab("SUPPLY PRODUCTS", jScrollPane1);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        invoicePanel.setBackground(new java.awt.Color(255, 255, 255));
        invoicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "O&O Invoice 4 Yahaya Madaki Way,Katsina, Katsina State", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 0));
        jLabel3.setText("O&O General Enterprise");

        invDateLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        billerInvNo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "customerID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        billerName.setEditable(false);
        billerName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bill To : ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        invoiceTable.setFont(new java.awt.Font("Traditional Arabic", 1, 12)); // NOI18N
        invoiceTable.setForeground(new java.awt.Color(102, 0, 0));
        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Description", "Qty Sold", "Unit Price(NGN)", "Invoice Amount(NGN)"
            }
        ));
        invoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(invoiceTable);

        totAmtInvLabel.setFont(new java.awt.Font("Traditional Arabic", 1, 12)); // NOI18N
        totAmtInvLabel.setForeground(new java.awt.Color(102, 0, 0));
        totAmtInvLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N
        totAmtInvLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totAmtInvLabelMouseClicked(evt);
            }
        });

        amtRecInvLabel.setFont(new java.awt.Font("Traditional Arabic", 0, 13)); // NOI18N
        amtRecInvLabel.setForeground(new java.awt.Color(102, 0, 0));
        amtRecInvLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Amt Rec", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Traditional Arabic", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 0, 0));
        jLabel10.setText("Goods Received in good condition & to the best quality required by me..........................");

        jLabel11.setFont(new java.awt.Font("Traditional Arabic", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 0));
        jLabel11.setText("Prepared By.........................");

        jLabel12.setFont(new java.awt.Font("Traditional Arabic", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 0, 0));
        jLabel12.setText("Aproved By......................");

        printLedgBal.setEditable(false);
        printLedgBal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Balance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        discTField.setEditable(false);
        discTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DisRate(%)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        javax.swing.GroupLayout invoicePanelLayout = new javax.swing.GroupLayout(invoicePanel);
        invoicePanel.setLayout(invoicePanelLayout);
        invoicePanelLayout.setHorizontalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, invoicePanelLayout.createSequentialGroup()
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(billerName, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(invDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(billerInvNo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(discTField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128))
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(invoicePanelLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(26, 26, 26)
                                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(invoicePanelLayout.createSequentialGroup()
                                        .addComponent(totAmtInvLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(amtRecInvLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(printLedgBal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        invoicePanelLayout.setVerticalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(billerName, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(discTField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                        .addComponent(billerInvNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(8, 8, 8)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totAmtInvLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(amtRecInvLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(printLedgBal, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton3.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton3.setForeground(new java.awt.Color(102, 0, 0));
        jButton3.setText("PRINT INVOICE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton9.setForeground(new java.awt.Color(102, 0, 0));
        jButton9.setText("NEXT   >   >   >");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton10.setForeground(new java.awt.Color(102, 0, 0));
        jButton10.setText("<   <   <   B   A   C   K");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        totCashRecTodTField.setEditable(false);
        totCashRecTodTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View Total Cash Received Today", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N
        totCashRecTodTField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totCashRecTodTFieldMouseClicked(evt);
            }
        });

        todaySalesMinusDisc.setEditable(false);
        todaySalesMinusDisc.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View 2days Sales Minus Discount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N
        todaySalesMinusDisc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                todaySalesMinusDiscMouseClicked(evt);
            }
        });

        todaysCashPlusDiscount.setEditable(false);
        todaysCashPlusDiscount.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View 2days Sales Plus Discount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N
        todaysCashPlusDiscount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                todaysCashPlusDiscountMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(invoicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totCashRecTodTField)
                            .addComponent(todaySalesMinusDisc)
                            .addComponent(todaysCashPlusDiscount, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 30, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addGap(519, 519, 519)
                .addComponent(jButton9)
                .addGap(598, 598, 598))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(invoicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(totCashRecTodTField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(todaySalesMinusDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(todaysCashPlusDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addGap(54, 54, 54)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton9))
                .addContainerGap(1038, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel6);

        managerTab.addTab("RAISE INVOICE", jScrollPane2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "retreival Panel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        upDateTrancCombo.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        upDateTrancCombo.setForeground(new java.awt.Color(102, 0, 0));
        upDateTrancCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select Criteria---", "Retreive By Customer Id" }));

        retrTField.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        retrTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "enter text here", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        jButton5.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton5.setForeground(new java.awt.Color(102, 0, 0));
        jButton5.setText("RETREIVE OLD TRANSACTION");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton5))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(upDateTrancCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(retrTField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(upDateTrancCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(retrTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        retrUpPanel.setBackground(new java.awt.Color(255, 255, 255));

        amtRecUpDateTField.setToolTipText("");
        amtRecUpDateTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Amt Received", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        upDateButton.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        upDateButton.setForeground(new java.awt.Color(102, 0, 0));
        upDateButton.setText("|   |   UPDATE   |   |");
        upDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upDateButtonActionPerformed(evt);
            }
        });

        markPayment.setBackground(new java.awt.Color(255, 255, 255));
        markPayment.setFont(new java.awt.Font("Traditional Arabic", 1, 12)); // NOI18N
        markPayment.setForeground(new java.awt.Color(102, 0, 0));
        markPayment.setText("Mark Payment");
        markPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markPaymentActionPerformed(evt);
            }
        });

        ledgUpBalaTField.setEditable(false);
        ledgUpBalaTField.setToolTipText("");
        ledgUpBalaTField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ledger Balance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        retrLastAmtReceived.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        retrLastAmtReceived.setForeground(new java.awt.Color(102, 0, 0));
        retrLastAmtReceived.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Last Amount Received", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 13), new java.awt.Color(102, 0, 0))); // NOI18N

        retrLocationUpdate.setEditable(false);
        retrLocationUpdate.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Location", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        javax.swing.GroupLayout retrUpPanelLayout = new javax.swing.GroupLayout(retrUpPanel);
        retrUpPanel.setLayout(retrUpPanelLayout);
        retrUpPanelLayout.setHorizontalGroup(
            retrUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(retrUpPanelLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(retrUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(retrLocationUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retrLastAmtReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ledgUpBalaTField, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amtRecUpDateTField, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(retrUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(retrUpPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(markPayment)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(retrUpPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(upDateButton)
                        .addGap(109, 109, 109))))
        );
        retrUpPanelLayout.setVerticalGroup(
            retrUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(retrUpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(retrLastAmtReceived, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ledgUpBalaTField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(retrUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amtRecUpDateTField, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(markPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(retrUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(retrUpPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(upDateButton))
                    .addGroup(retrUpPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(retrLocationUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(486, Short.MAX_VALUE))
        );

        retrScroll.setViewportView(retrUpPanel);

        jButton11.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton11.setForeground(new java.awt.Color(102, 0, 0));
        jButton11.setText("<   <   <   B   A   C   K");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton15.setForeground(new java.awt.Color(102, 0, 0));
        jButton15.setText("NEXT   >   >   >");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(retrScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(461, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addGap(401, 401, 401))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(retrScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(103, 103, 103)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton15))
                .addContainerGap(1184, Short.MAX_VALUE))
        );

        jScrollPane7.setViewportView(jPanel3);

        managerTab.addTab("UPDATE TRANSACTION", jScrollPane7);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        custDetTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Full Name", "Customer Type", "Phone Number", "Customer ID"
            }
        ));
        jScrollPane9.setViewportView(custDetTable);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "selectionPanel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Traditional Arabic", 1, 12), new java.awt.Color(102, 0, 0))); // NOI18N

        selecRetrCombo.setFont(new java.awt.Font("Traditional Arabic", 1, 14)); // NOI18N
        selecRetrCombo.setForeground(new java.awt.Color(102, 0, 0));
        selecRetrCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select Retreival Criteria---", "Retreive All" }));
        selecRetrCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecRetrComboActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Traditional Arabic", 1, 12)); // NOI18N
        jButton14.setForeground(new java.awt.Color(102, 0, 0));
        jButton14.setText("RETREIVE  >  >  >");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(selecRetrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(selecRetrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jButton14)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jButton16.setFont(new java.awt.Font("Traditional Arabic", 1, 13)); // NOI18N
        jButton16.setForeground(new java.awt.Color(102, 0, 0));
        jButton16.setText("<  <  <  B   A   C   K");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton16)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(349, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(jButton16)
                .addContainerGap(1233, Short.MAX_VALUE))
        );

        jScrollPane8.setViewportView(jPanel8);

        managerTab.addTab("VIEW ALL DISTRIBUTORS", jScrollPane8);

        managerLabel.setText(".");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(systemDate, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(managerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)))
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4))
            .addComponent(jSeparator1)
            .addComponent(managerTab, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(systemDate)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(managerLabel))
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managerTab, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you really want to close app", "Confirmation Prompt", JOptionPane.YES_NO_OPTION);
        if (x == JOptionPane.YES_OPTION) {
            this.setVisible(false);
            O_OAuthenticate.main(new String[]{});
        } else if (x == JOptionPane.NO_OPTION) {
            this.setVisible(true);
        } else {
            this.setVisible(true);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked
    String prodType = "";

    private String getProd() {
        if (prodTypeCombo.getSelectedItem().equals("---Select Product Sold---")) {
            JOptionPane.showMessageDialog(this, "No Product selected yet");
        } else {
            prodType = (String) prodTypeCombo.getSelectedItem();
        }
        return prodType;
    }
    
    

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        this.setExtendedState(ICONIFIED);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void branchComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branchComboActionPerformed
if (branchCombo.getSelectedItem().equals("Katsina Branch")) {
            retrKTDetails("Katsina Branch", getProd());
        } else if (branchCombo.getSelectedItem().equals("Funtua Branch")) {
            retrKTDetails("Funtua Branch", getProd());
        } else if (branchCombo.getSelectedItem().equals("Jibia Branch")) {
            retrKTDetails("Jibia Branch", getProd());

        } else {
            JOptionPane.showMessageDialog(this, "No  Branch selected yet", "Error Alert", JOptionPane.ERROR_MESSAGE);
        }        
        // TODO add your handling code here:
    }//GEN-LAST:event_branchComboActionPerformed


    private void insertDailySales( String cName, String cId, String itemSold, double unitPrice, int qtySold, double invAmt, int invNo, String prodId, int RecNo,  String date , String loc){
        try {
            state =  connection.createStatement();
            final String INSERT_VALUES = "insert into dailysales( fullName,customer_id, itemSold, unitPrice,qtySold, invoiceAmount,  invoiceNo,prodId, receiptNo,  date,location) values(" + "'" + cName + "'," + "'" + cId + "'," + "'" + itemSold + "'," + "" + unitPrice + "," + "" + qtySold + "," + "" + invAmt + ","  + "" + invNo + "," + "'" + prodId + "'," + "" + RecNo + ","  + "'" + date + "'," +  "'" + loc + "'"  + ")";
            System.out.println(INSERT_VALUES);
            state.execute(INSERT_VALUES);
            JOptionPane.showMessageDialog(this, "Sales Record Insertion Successful", "Succes Alert", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage());
           
        }
    
    }
    
    private void insertCustomerDetails(String cName, String cType, String itemSold, double unitPrice, int qtySold, double invAmt,double amtRec, double totSales, double ledgBal, int invNo, String prodId, int RecNo, String date, String loc){
        try {
            state =  connection.createStatement();
            final String INSERT_VALUES = "insert into sales_table(customerName,customerType, itemSold,unitPrice,qtySold, invoiceAmount, amtReceived, totalSales,ledgBal, invoiceNo,prodId, receiptNo,date, location) values(" + "'" + cName + "'," + "'" + cType + "'," + "'" + itemSold + "'," + "" + unitPrice + "," + "" + qtySold + "," + "" + invAmt + "," + "" + amtRec + "," + "" + totSales + "," + "" + ledgBal + "," + "" + invNo + "," + "'" + prodId + "'," + "" + RecNo + ","  + "'" + date + "'," +  "'" + loc + "'"  + ")";
            System.out.println(INSERT_VALUES);
            state.execute(INSERT_VALUES);
            JOptionPane.showMessageDialog(this, "Value inserted");
            
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage());
           
        }
    
    }
    private void insertLatestStock(String date, String loc, String prodType, int qtyAvail, double unitPrice, String prodId, double amtequi){
        try {
            state = connection.createStatement();
            final String INSERT_STOCK = "Insert into pamp_warehouse(date,location,prod_type,qty_in_stock,unit_price,prod_id,amt_equivalent)values(" + "'" + date + "'," + "'" + loc + "'," + "'" + prodType + "'," + "" + qtyAvail + "," + "" + unitPrice + "," + "'" + prodId + "'," + "" + amtequi +  "" +  ")" ;
            System.out.println(INSERT_STOCK);
            state.execute(INSERT_STOCK);
            JOptionPane.showMessageDialog(this, "Successful");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage());
            
                    
        }
}
    private void upDateRecentStock(double amtEqui, int qtyLeft, String prodType, String loc){
        try {
            state = connection.createStatement();
            final String UPDATE_DATA = String.format("update pamp_warehouse set amt_equivalent = %s, qty_in_stock = %s where prod_type = '%s' and location = '%s'  order by id desc", amtEqui,qtyLeft,prodType,loc);
            System.out.println(UPDATE_DATA);
            state.execute(UPDATE_DATA);
            JOptionPane.showMessageDialog(this, "Successful");
        } catch (SQLException ex) {
            Logger.getLogger(O_OManagerZone.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

double cashBalance = 0.00;
double finalBalance = 0.00;
double prodBalances = 0.00;
    private double genCashBalance(){
cashBalance = Double.parseDouble(cashEquiTField.getText());
prodBalances = Double.parseDouble(goodsCashEqui.getText());
if(prodBalances > cashBalance){
JOptionPane.showMessageDialog(this, "Cash Equivalent  detected is higher than cash balance...review your entry" , "Error Alert", JOptionPane.ERROR_MESSAGE);
}else if(prodBalances == cashBalance){
JOptionPane.showMessageDialog(this, "Match in cash equivalent detected Please Contact manager to stock up", "Warning Message", JOptionPane.WARNING_MESSAGE);
finalBalance = cashBalance - prodBalances;
cashEquiTField.setText(Double.toString(finalBalance));
}
else{
finalBalance = cashBalance - prodBalances;
cashEquiTField.setText(Double.toString(finalBalance));

}

return finalBalance;
}

    private void insertTableValues(){
    
    try {
            DefaultTableModel defaultTableModel ;
            defaultTableModel = (DefaultTableModel) catTable.getModel();

            defaultTableModel.addRow(new Object[]{ prodIDTField.getText(),prodTypeCombo.getSelectedItem(),  Integer.parseInt(currentSoldQty.getText()), Double.parseDouble (unitPriceTField.getText()),Double.parseDouble (goodsCashEqui.getText())});

        } catch (Exception exception) {
           JOptionPane.showMessageDialog(this, "Error in insertion as a result of : " + exception.getLocalizedMessage());
        }
    }
    
   
    
    double invAm = 0.00;
    double amRec = 0.00;
    double ledgAmt  = 0.00;
    double dbBal = 0.00;
    private double genLedBal(String cName){
        
        try {
            state =  connection.createStatement();
            final String RETR_LAST_BAL = "Select ledgBal from totalsales where customer_id = " + "'" + cName + "'" + "order by id desc";
            System.out.println(RETR_LAST_BAL);
            rSet = state.executeQuery(RETR_LAST_BAL);
            if(rSet.next()){
                dbBal =  rSet.getDouble("ledgBal");
            }
            invAm  = Double.parseDouble(totSalesTField.getText());
            amRec = Double.parseDouble(amtPaid.getText());
            
            if (amRec < invAm){
                
                ledgAmt =  amRec - invAm;
                ledgAmt = dbBal + ledgAmt;
                ledgBalTField.setText(Double.toString(ledgAmt));
                JOptionPane.showMessageDialog(this, "Amount Received shows that Payment is incomplete with a balance of : " + ledgAmt);
                
                
            }
            else if (amRec > invAm){
                
                ledgAmt = amRec - invAm;
                ledgAmt = dbBal + ledgAmt;
                ledgBalTField.setText(Double.toString(ledgAmt));
                JOptionPane.showMessageDialog(this, "Amount Received shows that Excess Payment of  : " + ledgAmt + "was made");
                
            }
            else {
                
                ledgAmt = amRec - invAm;
                ledgAmt = dbBal + ledgAmt;
                ledgBalTField.setText(Double.toString(ledgAmt));
                JOptionPane.showMessageDialog(this, " Amount Received  equals Invoice Amount...No debt");
               
            }
            
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage());
      
        }
        catch(NumberFormatException nux){JOptionPane.showMessageDialog(this, "Error as a result of : " + nux.getMessage());
        
        }
    return  ledgAmt;
    }
    
    int invNo = 0;
    private int genInvoice(){
        invNo = 135297 + (int)(Math.random() * 4268195);
        
        invNoTField.setText(Integer.toString (invNo));
        
        return invNo;
}
    
       private int genReceipt(){
        invNo = 13529 + (int)(Math.random() * 426819);
        recNoTFielld.setText(Integer.toString(invNo));
        
        
        return invNo;
}
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(cName.getText().equals("") &  unitPriceTField.getText().equals("") & currentSoldQty.getText().equals("") & goodsCashEqui.getText().equals("")  & qtyLeftTField.getText().equals("") & prodTypeCombo.getSelectedItem().equals("---Select Product Sold---") & cashEquiTField.getText().equals("") & branchCombo.getSelectedItem().equals("---Select Location---") & prodIDTField.getText().equals("")){
JOptionPane.showMessageDialog(this, "Record cant be done, no sales record found" , "Error Alert", JOptionPane.ERROR_MESSAGE);
}
else if(cName.getText().equals("") || unitPriceTField.getText().equals("") || currentSoldQty.getText().equals("") || goodsCashEqui.getText().equals("")  || qtyLeftTField.getText().equals("") || prodTypeCombo.getSelectedItem().equals("---Select Product Sold---") || cashEquiTField.getText().equals("") || branchCombo.getSelectedItem().equals("---Select Location---") || prodIDTField.getText().equals("")){
JOptionPane.showMessageDialog(this, "Record cant be done, some sales record are not found" , "Warning Alert", JOptionPane.WARNING_MESSAGE);
}
else{
    
    
    
    int x =  JOptionPane.showConfirmDialog(this, "You are about to push this record..Click yes to confirm and no to cancel", "Confirmation Message", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
    if(x==JOptionPane.NO_OPTION){
    cName.setText("");
    //cTypeCombo.setSelectedItem("---Select Channel of Distribution---");
    currentSoldQty.setText("");
    goodsCashEqui.setText("");
    amtPaid.setText("");
    qtyLeftTField.setText("");
    cashEquiTField.setText("");
    
    prodIDTField.setText("");
percentageTField.setText("");
    }
    else if (x==JOptionPane.YES_OPTION){
        
        int j = JOptionPane.showConfirmDialog(this, "You are about to effect this deduction on on initial qty left in stock for item selected..Click Yes to confirm and No to Cancel...Note that once clicked it cant be reversed", "Confirmation Dialog", JOptionPane.YES_NO_OPTION);
if(j==JOptionPane.NO_OPTION){
    branchCombo.setSelectedItem("---Select Location---");
    prodTypeCombo.setSelectedItem("---Select Product Sold---");
    unitPriceTField.setText("");
    goodsCashEqui.setText("");
    qtyLeftTField.setText("");
    prodIDTField.setText("");
    cashEquiTField.setText("");
    currentSoldQty.setText("");

}      
else{
genQtyRemDist();  }

        int h = JOptionPane.showConfirmDialog(this, "You are about to effect this deduction on on initial cash balance for item selected..Click Yes to confirm and No to Cancel...Note that once clicked it cant be reversed", "Confirmation Dialog", JOptionPane.YES_NO_OPTION);
if(h==JOptionPane.NO_OPTION){
    branchCombo.setSelectedItem("---Select Location---");
    prodTypeCombo.setSelectedItem("---Select Product Sold---");
    unitPriceTField.setText("");
    goodsCashEqui.setText("");
    qtyLeftTField.setText("");
    prodIDTField.setText("");
    cashEquiTField.setText("");
    currentSoldQty.setText("");

}
else{genCashBalance();}

        upDateRecentStock(Double.parseDouble (cashEquiTField.getText()), Integer.parseInt (qtyLeftTField.getText()), getProd(),(String) branchCombo.getSelectedItem());
        
//        genLedBal();
        insertTableValues();}
    else{
    JOptionPane.showMessageDialog(this, "No selection made yet");
    }


unitPriceTField.setText("");
currentSoldQty.setText("");
goodsCashEqui.setText("");
amtPaid.setText("");
qtyLeftTField.setText("");
prodTypeCombo.setSelectedItem("---Select Product Sold---");

prodIDTField.setText("");
cashEquiTField.setText("");
        

}
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void currentSoldQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentSoldQtyActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_currentSoldQtyActionPerformed

    private void goodsCashEquiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goodsCashEquiMouseClicked

genDistrAmtEquivalent();


// TODO add your handling code here:
    }//GEN-LAST:event_goodsCashEquiMouseClicked

    private void currentSoldQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_currentSoldQtyKeyReleased
       // TODO add your handling code here:
    }//GEN-LAST:event_currentSoldQtyKeyReleased

    private void qtyLeftTFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_qtyLeftTFieldMouseClicked
     // TODO add your handling code here:
    }//GEN-LAST:event_qtyLeftTFieldMouseClicked

    
    private void qtyLeftTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyLeftTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyLeftTFieldActionPerformed

    
    private void cashEquiTFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cashEquiTFieldMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_cashEquiTFieldMouseClicked

    private void amtPaidMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_amtPaidMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_amtPaidMouseReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        JOptionPane.showMessageDialog(this, "Initializing Printer...");
        printComponenet();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
DefaultTableModel defaultTableModel;
defaultTableModel = (DefaultTableModel)catTable.getModel();
for (int i = 0 ; i < defaultTableModel.getRowCount(); i++){
    insertDailySales(cName.getText(), retrCustId(cName.getText()), (String)defaultTableModel.getValueAt(i, 1) , (Double)defaultTableModel.getValueAt(i, 3), (Integer)defaultTableModel.getValueAt(i, 2), (Double)defaultTableModel.getValueAt(i, 4),  Integer.parseInt(invNoTField.getText()), (String)defaultTableModel.getValueAt(i, 0), Integer.parseInt (recNoTFielld.getText()),  getSystemDate(), (String)branchCombo.getSelectedItem());
    //insertCustomerDetails(cName.getText(),(String) defaultTableModel.getValueAt(i, 5),(String)defaultTableModel.getValueAt(i, 0) , (Double)defaultTableModel.getValueAt(i, 3), (Integer)defaultTableModel.getValueAt(i, 2), (Double)defaultTableModel.getValueAt(i, 4) ,Double.parseDouble ( amtPaid.getText()), Double.parseDouble (totSalesTField.getText()), Double.parseDouble (ledgBalTField.getText()), Integer.parseInt(invNoTField.getText()), (String)defaultTableModel.getValueAt(i, 0), Integer.parseInt (recNoTFielld.getText()), getSystemDate(),(String) branchCombo.getSelectedItem());
}
        insertTotSales(retrCustId(cName.getText()),Double.parseDouble(amtPaid.getText()),Double.parseDouble(ledgBalTField.getText()), Double.parseDouble(totSalesTField.getText()), getSystemDate(),(String) branchCombo.getSelectedItem());
        
        if(managerTab.getSelectedIndex() < managerTab.getComponents().length - 1){
managerTab.setSelectedIndex(managerTab.getSelectedIndex() + 1);
raiseInv();
getTableVal();

        }


// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void totSalesTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totSalesTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totSalesTFieldActionPerformed

    private void totSalesTFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totSalesTFieldMouseClicked
if(percentageTField.getText().equals("")){
JOptionPane.showMessageDialog(this, "No Discount percentage found", "Ommision Alert", JOptionPane.ERROR_MESSAGE);
JOptionPane.showMessageDialog(this, "Enter discout percentage");}
else{
        int x = JOptionPane.showConfirmDialog(this, " Percentage Discount you entered is " + percentageTField.getText() + "Click Yes to confirm or no to cancel", "Confirmation  Dialog", JOptionPane.YES_NO_OPTION);
        
if(x==JOptionPane.YES_OPTION){
getAmtMinPerc(); 
}
else{JOptionPane.showMessageDialog(this, "Please Re-enter your percentage", "Info Alert", JOptionPane.INFORMATION_MESSAGE);
totSalesTField.setText("");
percentageTField.setText("");
}}               // TODO add your handling code here:
    }//GEN-LAST:event_totSalesTFieldMouseClicked

    private void invNoTFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invNoTFieldMouseClicked
genInvoice();        // TODO add your handling code here:
    }//GEN-LAST:event_invNoTFieldMouseClicked

    private void ledgBalTFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ledgBalTFieldMouseClicked
genLedBal(retrCustId(cName.getText()));        // TODO add your handling code here:
    }//GEN-LAST:event_ledgBalTFieldMouseClicked

    private void invNoTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invNoTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invNoTFieldActionPerformed

    private void invoiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceTableMouseClicked

// TODO add your handling code here:
    }//GEN-LAST:event_invoiceTableMouseClicked

    private void totAmtInvLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totAmtInvLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_totAmtInvLabelMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
if(cNameCustSetUpTField.getText().equals("") & cLocationSetUpCustomerTField.getSelectedItem().equals("---Select Customer Location---") & cTypeCusSetUpTField.getSelectedItem().equals("---Select Type of Customer---") & phoneTField.getText().equals("") & cIdTField.getText().equals("")){
JOptionPane.showMessageDialog(this, "Empty Parameters, Customer Cant be setup", "Error Alert", JOptionPane.ERROR_MESSAGE);
}
else if(cNameCustSetUpTField.getText().equals("") || cLocationSetUpCustomerTField.getSelectedItem().equals("---Select Customer Location---") || cTypeCusSetUpTField.getSelectedItem().equals("---Select Type of Customer---") || phoneTField.getText().equals("") || cIdTField.getText().equals("")){
JOptionPane.showMessageDialog(this, "Missing Parameters, Customer Cant be setup", "Error Alert", JOptionPane.WARNING_MESSAGE);
}
else{
    
    setUpFreshCustomer(cNameCustSetUpTField.getText(), (String)cTypeCusSetUpTField.getSelectedItem(), phoneTField.getText(), cIdTField.getText(), getSystemDate());
    setUpNewCustomer(cNameCustSetUpTField.getText(), cIdTField.getText(), "", 0.00, 0, 0.00, 0, "", 0, (String)cLocationSetUpCustomerTField.getSelectedItem(), getSystemDate());
}// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        if(upDateTrancCombo.getSelectedItem().equals("Retreive By Customer Id")){
        if(retrTField.getText().equals("")){
        JOptionPane.showMessageDialog(this, "No search value entered yet", "Error Alert", JOptionPane.ERROR_MESSAGE);
        }else{
            retrSalesData(retrTField.getText());
        }
        }
        else{JOptionPane.showMessageDialog(this, "Unable to Retreive..No Retreive Criteria Supplied Yet", "Error Alert", JOptionPane.ERROR_MESSAGE);}
        /**if(upDateTrancCombo.getSelectedItem().equals("Retreive By Receipt No")){
if(retrTField.getText().equals(""))
{
JOptionPane.showMessageDialog(this, "Unable to retreive..No Parameter Supplied Yet", "Ommision Alert", JOptionPane.ERROR_MESSAGE);}
else{retrSalesByRecNo(Integer.parseInt (retrTField.getText()));}
}
else if(upDateTrancCombo.getSelectedItem().equals("Retreive By Invoice No")){
if(retrTField.getText().equals(""))
{
JOptionPane.showMessageDialog(this, "Unable to retreive..No Parameter Supplied Yet", "Ommision Alert", JOptionPane.ERROR_MESSAGE);}
else{retrSalesByInNo(Integer.parseInt (retrTField.getText()));}
}
else if(upDateTrancCombo.getSelectedItem().equals("Retreive By Customer Name")){
if(retrTField.getText().equals(""))
{
JOptionPane.showMessageDialog(this, "Unable to retreive..No Parameter Supplied Yet", "Ommision Alert", JOptionPane.ERROR_MESSAGE);}
else{retrSalesByCname( retrTField.getText());}
}
else{JOptionPane.showMessageDialog(this, " No valid selection made yet..", "Error Alert" , JOptionPane.ERROR_MESSAGE);
}**/// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    
    private void upDateSales(String cId, double ledBal, double amtRec, double totSales, String date, String loc){
        try {
            state = connection.createStatement();
            final String INS_UP = "insert into totalsales(customer_id, amtRec, ledgBal,totalSales, date, location )values(" + "'" + cId + "'," + "" + ledBal + "," + "" + amtRec + "," + "" + totSales + "," + "'" + date + "'" + "'" + loc + "'" + ")";
            System.out.println(INS_UP);
            state.execute(INS_UP);
            JOptionPane.showMessageDialog(this, "Cash Update successful");
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
           
        }
    
    }
    private void upDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upDateButtonActionPerformed
if(retrLastAmtReceived.getText().equals("") & ledgUpBalaTField.getText().equals("") & amtRecUpDateTField.getText().equals("")){
JOptionPane.showMessageDialog(this, "Empty Parameters", "Error Alert", JOptionPane.ERROR_MESSAGE);
}
else                          
if(retrLastAmtReceived.getText().equals("") || ledgUpBalaTField.getText().equals("") || amtRecUpDateTField.getText().equals("")){
JOptionPane.showMessageDialog(this, "Missing Parameters", "Warning Message", JOptionPane.WARNING_MESSAGE);
}
else{
    upDateSales(retrTField.getText(), Double.parseDouble (amtRecUpDateTField.getText()),  Double.parseDouble (ledgUpBalaTField.getText()), 0.00, getSystemDate(), retrLocationUpdate.getText());
}
        /**
        
        if(upDateTrancCombo.getSelectedItem().equals("Retreive By Receipt No")){
if(ledgUpBalaTField.getText().equals("") & amtRecUpDateTField.getText().equals("") & retrCName.getText().equals("") & retrCType.getText().equals("") & retrItemPurchased.getText().equals("") & retrUnitPrice.getText().equals("")  & retrQtySold.getText().equals("") & retrInvAmt.getText().equals("") & retrLastAmtReceived.getText().equals("") & retrTotalSales.getText().equals("") & retrInvNo.getText().equals("") & retrProdId.getText().equals("") & retrRecNo.getText().equals("") & retrLoc.getText().equals("") & retrDate.getText().equals("")){
JOptionPane.showMessageDialog(this, "Update can't be done..No Update Value Found", "Error Alert", JOptionPane.ERROR_MESSAGE);
}else  if(ledgUpBalaTField.getText().equals("") || amtRecUpDateTField.getText().equals("") || retrCName.getText().equals("") || retrCType.getText().equals("") || retrItemPurchased.getText().equals("") || retrUnitPrice.getText().equals("")  || retrQtySold.getText().equals("") || retrInvAmt.getText().equals("") || retrLastAmtReceived.getText().equals("") || retrTotalSales.getText().equals("") || retrInvNo.getText().equals("") || retrProdId.getText().equals("") || retrRecNo.getText().equals("") || retrLoc.getText().equals("") || retrDate.getText().equals("")){
JOptionPane.showMessageDialog(this, "Update can't be done..Some Update Value are missing", "Error Alert", JOptionPane.ERROR_MESSAGE);
}
else{insertUpdate(retrCName.getText(), retrCType.getText(), retrItemPurchased.getText(), Double.parseDouble(retrUnitPrice.getText()), Integer.parseInt(retrQtySold.getText()), Double.parseDouble(retrInvAmt.getText()), Double.parseDouble(amtRecUpDateTField.getText()), Double.parseDouble(retrTotalSales.getText()),Double.parseDouble (ledgUpBalaTField.getText()) , Integer.parseInt(retrInvNo.getText()), retrProdId.getText(), Integer.parseInt(retrRecNo.getText()), retrLoc.getText(), getSystemDate());}
}
else if(upDateTrancCombo.getSelectedItem().equals("Retreive By Customer Name")){
if(ledgUpBalaTField.getText().equals("") & amtRecUpDateTField.getText().equals("") & retrCName.getText().equals("") & retrCType.getText().equals("") & retrItemPurchased.getText().equals("") & retrUnitPrice.getText().equals("")  & retrQtySold.getText().equals("") & retrInvAmt.getText().equals("") & retrLastAmtReceived.getText().equals("") & retrTotalSales.getText().equals("") & retrInvNo.getText().equals("") & retrProdId.getText().equals("") & retrRecNo.getText().equals("") & retrLoc.getText().equals("") & retrDate.getText().equals("")){
JOptionPane.showMessageDialog(this, "Update can't be done..No Update Value Found", "Error Alert", JOptionPane.ERROR_MESSAGE);
}else  if(ledgUpBalaTField.getText().equals("") || amtRecUpDateTField.getText().equals("") || retrCName.getText().equals("") || retrCType.getText().equals("") || retrItemPurchased.getText().equals("") || retrUnitPrice.getText().equals("")  || retrQtySold.getText().equals("") || retrInvAmt.getText().equals("") || retrLastAmtReceived.getText().equals("") || retrTotalSales.getText().equals("") || retrInvNo.getText().equals("") || retrProdId.getText().equals("") || retrRecNo.getText().equals("") || retrLoc.getText().equals("") || retrDate.getText().equals("")){
JOptionPane.showMessageDialog(this, "Update can't be done..Some Update Value are missing", "Error Alert", JOptionPane.ERROR_MESSAGE);
}
else{//insertUpdate(retrCName.getText(), retrCType.getText(), retrItemPurchased.getText(), Double.parseDouble(retrUnitPrice.getText()), Integer.parseInt(retrQtySold.getText()), Double.parseDouble(retrInvAmt.getText()), Double.parseDouble(amtRecUpDateTField.getText()), Double.parseDouble(retrTotalSales.getText()),Double.parseDouble (ledgUpBalaTField.getText()) , Integer.parseInt(retrInvNo.getText()), retrProdId.getText(), Integer.parseInt(retrRecNo.getText()), retrLoc.getText(), getSystemDate());
}
}

else if(upDateTrancCombo.getSelectedItem().equals("Retreive By Invoice No")){
if(ledgUpBalaTField.getText().equals("") & amtRecUpDateTField.getText().equals("") & retrCName.getText().equals("") & retrCType.getText().equals("") & retrItemPurchased.getText().equals("") & retrUnitPrice.getText().equals("")  & retrQtySold.getText().equals("") & retrInvAmt.getText().equals("") & retrLastAmtReceived.getText().equals("") & retrTotalSales.getText().equals("") & retrInvNo.getText().equals("") & retrProdId.getText().equals("") & retrRecNo.getText().equals("") & retrLoc.getText().equals("") & retrDate.getText().equals("")){
JOptionPane.showMessageDialog(this, "Update can't be done..No Update Value Found", "Error Alert", JOptionPane.ERROR_MESSAGE);
}else  if(ledgUpBalaTField.getText().equals("") || amtRecUpDateTField.getText().equals("") || retrCName.getText().equals("") || retrCType.getText().equals("") || retrItemPurchased.getText().equals("") || retrUnitPrice.getText().equals("")  || retrQtySold.getText().equals("") || retrInvAmt.getText().equals("") || retrLastAmtReceived.getText().equals("") || retrTotalSales.getText().equals("") || retrInvNo.getText().equals("") || retrProdId.getText().equals("") || retrRecNo.getText().equals("") || retrLoc.getText().equals("") || retrDate.getText().equals("")){
JOptionPane.showMessageDialog(this, "Update can't be done..Some Update Value are missing", "Error Alert", JOptionPane.ERROR_MESSAGE);
}
else{
* insertUpdate(retrCName.getText(), retrCType.getText(), retrItemPurchased.getText(), Double.parseDouble(retrUnitPrice.getText()), Integer.parseInt(retrQtySold.getText()), Double.parseDouble(retrInvAmt.getText()), Double.parseDouble(amtRecUpDateTField.getText()), Double.parseDouble(retrTotalSales.getText()),Double.parseDouble (ledgUpBalaTField.getText()) , Integer.parseInt(retrInvNo.getText()), retrProdId.getText(), Integer.parseInt(retrRecNo.getText()), retrLoc.getText(), getSystemDate());}
}
else{JOptionPane.showMessageDialog(this, "Unable to update...Invalid Selection");}
**/


// TODO add your handling code here:
    }//GEN-LAST:event_upDateButtonActionPerformed

    private void markPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markPaymentActionPerformed

ledgVals = Double.parseDouble (ledgUpBalaTField.getText());
            cashValues = Double.parseDouble(amtRecUpDateTField.getText());
        if(markPayment.isSelected() & amtRecUpDateTField.getText().equals("")){JOptionPane.showMessageDialog(this, " No amount received was detected", "Ommision Alert", JOptionPane.ERROR_MESSAGE);}
        
            
        else {
            int v = JOptionPane.showConfirmDialog(this, "You just entered" + cashValues + " naira for update..Click Yes to Confirm and No to Cancel", "Confirmation Message", JOptionPane.YES_NO_OPTION);
            if(v==JOptionPane.NO_OPTION){
            ledgUpBalaTField.setText("");
            amtRecUpDateTField.setText("");
            upDateButton.setVisible(false);
            }else{
            finalLedg = ledgVals + cashValues;
            JOptionPane.showMessageDialog(this, "Cash Amount of " + cashValues + " received has being effected.. You have an outstanding Ledger Balance of : " + finalLedg);
            ledgUpBalaTField.setText(Double.toString(finalLedg));
            upDateButton.setVisible(true);}
}        // TODO add your handling code here:
    }//GEN-LAST:event_markPaymentActionPerformed

    private void recNoTFielldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recNoTFielldMouseClicked
genReceipt();        // TODO add your handling code here:
    }//GEN-LAST:event_recNoTFielldMouseClicked

    private void prodTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodTypeComboActionPerformed
getProd();        // TODO add your handling code here:
    }//GEN-LAST:event_prodTypeComboActionPerformed

    private void cIdTFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cIdTFieldMouseClicked
genCustId();        // TODO add your handling code here:
    }//GEN-LAST:event_cIdTFieldMouseClicked

    private void cTypeCusSetUpTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cTypeCusSetUpTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cTypeCusSetUpTFieldActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (managerTab.getSelectedIndex() < managerTab.getComponents().length - 1) {
            managerTab.setSelectedIndex(managerTab.getSelectedIndex()  + 1);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
if (managerTab.getSelectedIndex() < managerTab.getComponents().length - 1) {
            managerTab.setSelectedIndex(managerTab.getSelectedIndex()  + 1);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
if (managerTab.getSelectedIndex() < managerTab.getComponents().length - 1) {
            managerTab.setSelectedIndex(managerTab.getSelectedIndex()  - 1);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
if (managerTab.getSelectedIndex() < managerTab.getComponents().length - 1) {
            managerTab.setSelectedIndex(managerTab.getSelectedIndex()  + 1);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
if (managerTab.getSelectedIndex() < managerTab.getComponents().length - 1) {
            managerTab.setSelectedIndex(managerTab.getSelectedIndex()  - 1);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
if (managerTab.getSelectedIndex() < managerTab.getComponents().length - 1) {
            managerTab.setSelectedIndex(managerTab.getSelectedIndex()  - 1);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void cAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAddButtonActionPerformed
cLocationSetUpCustomerTField.addItem(cSetAddTField.getText());      // TODO add your handling code here:
    }//GEN-LAST:event_cAddButtonActionPerformed

    private void cLocationSetUpCustomerTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cLocationSetUpCustomerTFieldActionPerformed
if(cLocationSetUpCustomerTField.getSelectedItem().equals("Add More")){
cSetAddTField.setVisible(true);
cAddButton.setVisible(true);
}
else{
cSetAddTField.setVisible(false);
cAddButton.setVisible(false);
}// TODO add your handling code here:
    }//GEN-LAST:event_cLocationSetUpCustomerTFieldActionPerformed
private void remSelRow(){
DefaultTableModel deft;
deft = (DefaultTableModel)catTable.getModel();
int x = catTable.getSelectedRow();
deft.removeRow(x);
        
}
    private void clearTable(){
DefaultTableModel def ;
def  = (DefaultTableModel)catTable.getModel();
for(int i = 0 ; i < def.getRowCount(); i++){
def.removeRow(i);}
}
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
int x = JOptionPane.showConfirmDialog(this, "You are about to clear all entry so far...Click yes to confirm and no to cancel", "Confirmation Dialog", JOptionPane.YES_NO_OPTION);
if(x==JOptionPane.YES_OPTION){
clearTable();
totSalesTField.setText("");
amtPaid.setText("");
ledgBalTField.setText("");
percentageTField.setText("");
invNoTField.setText("");
recNoTFielld.setText("");
}
else{JOptionPane.showMessageDialog(this, "We knew it was a mistake ");}
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
    int x = JOptionPane.showConfirmDialog(this, "You are about to remove selected row...Click yes to confirm and no to cancel", "Confirmation Dialog", JOptionPane.YES_NO_OPTION);
if(x==JOptionPane.YES_OPTION){
remSelRow();
}
else{JOptionPane.showMessageDialog(this, "We knew it was a mistake ");}
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void selecRetrComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecRetrComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selecRetrComboActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
if(selecRetrCombo.getSelectedItem().equals("Retreive All")){

retrCustDetails();
}
else{JOptionPane.showMessageDialog(this, "Invalid selection" ,"Error Alert", JOptionPane.ERROR_MESSAGE);}// TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void percentageTFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentageTFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_percentageTFieldActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
if (managerTab.getSelectedIndex() < managerTab.getComponents().length - 1) {
            managerTab.setSelectedIndex(managerTab.getSelectedIndex()  + 1);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
if (managerTab.getSelectedIndex() < managerTab.getComponents().length - 1) {
            managerTab.setSelectedIndex(managerTab.getSelectedIndex()  - 1);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void totCashRecTodTFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totCashRecTodTFieldMouseClicked
if(branchCombo.getSelectedItem().equals("---Select Location---") || branchCombo.getSelectedItem().equals("")){
JOptionPane.showMessageDialog(this, "No valid Location was specified", "Ommision Alert", JOptionPane.ERROR_MESSAGE);
}else {
        
        retrTotCashToday(getSystemDate(), (String)branchCombo.getSelectedItem()); }   // TODO add your handling code here:
    }//GEN-LAST:event_totCashRecTodTFieldMouseClicked

    private void todaySalesMinusDiscMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todaySalesMinusDiscMouseClicked
if(branchCombo.getSelectedItem().equals("---Select Location---") || branchCombo.getSelectedItem().equals("")){
JOptionPane.showMessageDialog(this, "No valid Location was specified", "Ommision Alert", JOptionPane.ERROR_MESSAGE);
}else{
        retrTotAmtMinusDiscToday(getSystemDate(), (String)branchCombo.getSelectedItem());}        // TODO add your handling code here:
    }//GEN-LAST:event_todaySalesMinusDiscMouseClicked

    private void todaysCashPlusDiscountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todaysCashPlusDiscountMouseClicked
if(branchCombo.getSelectedItem().equals("---Select Location---") || branchCombo.getSelectedItem().equals("")){
JOptionPane.showMessageDialog(this, "No valid Location was specified", "Ommision Alert", JOptionPane.ERROR_MESSAGE);
}
else{
        retrTotCashTodayPlusDisc(getSystemDate(), (String)branchCombo.getSelectedItem()); }       // TODO add your handling code here:
    }//GEN-LAST:event_todaysCashPlusDiscountMouseClicked

   private double retrTotCashToday(String date, String loc){
        try {
            state = connection.createStatement();
            final String RETR_CASH = "Select sum(amtRec) from totalsales where date = " + "'" + date + "'" + " and location = " + "'" + loc + "'";
            System.out.println(RETR_CASH);
            rSet = state.executeQuery(RETR_CASH);
            if(rSet.next()){
                
                ourAmt = rSet.getDouble("sum(amtRec)");
                totCashRecTodTField.setText(Double.toString(ourAmt));
                
            }
            else{
                JOptionPane.showMessageDialog(this, "No sales found for today", "error alert", JOptionPane.ERROR_MESSAGE);}
        
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
        }
        return ourAmt;
   }
 
   
   private double retrTotCashTodayPlusDisc(String date, String loc){
        try {
            state = connection.createStatement();
            final String RETR_CASH = "Select sum(totalSales) from totalsales where date = " + "'" + date + "'" + " and location = " + "'" + loc + "'";
            System.out.println(RETR_CASH);
            rSet = state.executeQuery(RETR_CASH);
            if(rSet.next()){
                
                ourAmt = rSet.getDouble("sum(totalSales)");
                todaysCashPlusDiscount.setText(Double.toString(ourAmt));
                
            }
        else{JOptionPane.showMessageDialog(this, "No sales found for today", "error alert", JOptionPane.ERROR_MESSAGE);}
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
        }
        return ourAmt;
   }
   
   private double retrTotAmtMinusDiscToday(String date, String loc){
        try {
            state = connection.createStatement();
            final String RETR_CASH = "Select sum(invoiceAmount) from dailysales where date = " + "'" + date + "'" + " and location = " + "'" + loc + "'";
            System.out.println(RETR_CASH);
            rSet = state.executeQuery(RETR_CASH);
            if(rSet.next()){
                
               ourAmt = rSet.getDouble("sum(invoiceAmount)");
               todaySalesMinusDisc.setText(Double.toString(ourAmt));
               
                
            }
        else{JOptionPane.showMessageDialog(this, "No sales found for today", "error alert", JOptionPane.ERROR_MESSAGE);}
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
        }
        return ourAmt;
   }
     

    private void retrCustDetails(){
        try {
            state = connection.createStatement();
            final String RETR_CUS = "Select fullName, customerType, phone , customer_id from customertable";
            System.out.println(RETR_CUS);
            rSet  = state.executeQuery(RETR_CUS);
            if(rSet.next()){
                 JOptionPane.showMessageDialog(this, "Retreival was Sucessful", "Success Alert", JOptionPane.INFORMATION_MESSAGE);
                custDetTable.setModel(DbUtils.resultSetToTableModel(rSet));
               
            }
            else{JOptionPane.showMessageDialog(this, "Unable to retreive info", "Error Alert", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage()) ;
}

}
    
    private void retrCustDetailsById(String cId){
        try {
            state = connection.createStatement();
            final String RETR_CUS = "Select fullName, customerType, phone , customer_id from customertable where customer_id  = " + "'" + cId + "'";
            System.out.println(RETR_CUS);
            rSet  = state.executeQuery(RETR_CUS);
            if(rSet.next()){
                 JOptionPane.showMessageDialog(this, "Retreival was Sucessful", "Success Alert", JOptionPane.INFORMATION_MESSAGE);
                custDetTable.setModel(DbUtils.resultSetToTableModel(rSet));
               
            }
            else{JOptionPane.showMessageDialog(this, "Unable to retreive info", "Error Alert", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage()) ;
}

}
    
       private void retrCustDetailsByName(String cName){
        try {
            state = connection.createStatement();
            final String RETR_CUS = "Select fullName, customerType, phone , customer_id from customertable where fullName  = " + "'" + cName + "'";
            System.out.println(RETR_CUS);
            rSet  = state.executeQuery(RETR_CUS);
            if(rSet.next()){
                 JOptionPane.showMessageDialog(this, "Retreival was Sucessful", "Success Alert", JOptionPane.INFORMATION_MESSAGE);
                custDetTable.setModel(DbUtils.resultSetToTableModel(rSet));
               
            }
            else{JOptionPane.showMessageDialog(this, "Unable to retreive info", "Error Alert", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage()) ;
}

}
    
    
    double ledgVals = 0.00;
double cashValues = 0.00;
double finalLedg = 0.00;

    
    
    

    private void retrSalesData(String cId){
        try {
            state =  connection.createStatement();
            final String RETR_SALES = "Select amtRec, ledgBal, location from totalsales where customer_id  = " + "'" + cId + "'" + "order by id desc";
            System.out.println(RETR_SALES);
            rSet = state.executeQuery(RETR_SALES);
            if(rSet.next()){
                JOptionPane.showMessageDialog(this, "Retreival Succesful");
                retrScroll.setVisible(true);
                retrUpPanel.setVisible(true);
                retrLastAmtReceived.setText(Double.toString(rSet.getDouble("amtRec")));
                ledgUpBalaTField.setText(Double.toString(rSet.getDouble("ledgBal")));
                retrLocationUpdate.setText((String)rSet.getObject("location"));
                
            }else{JOptionPane.showMessageDialog(this, "Access Denied..Invalid Customer Id", "Error Alert", JOptionPane.ERROR_MESSAGE);
                
                retrUpPanel.setVisible(false);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getLocalizedMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
            
        }
    }
    
   String custId = "";
   String cust = "";
   
   
    private String genCustId(){
        try {
            invNo = 235297 + (int)(Math.random() * 3468195);
            cust = String.valueOf(invNo);
            custId = cNameCustSetUpTField.getText(0, 3) + cust;
            cIdTField.setText(custId);
            
            
        } catch (BadLocationException ex) {
           JOptionPane.showMessageDialog(this, "Error as a result of " + ex.getLocalizedMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
        }
    return custId;}
    
    private void setUpNewCustomer(String cName, String cType, String itemSold, double unitPr, int qtySold, double innAmot,  int invNum, String prodId,int recNo,String loc, String date){
        try {
            state = connection.createStatement();
            final String SET_UP_CUST = "Insert into dailysales(fullName, customer_id,itemSold, unitPrice,qtySold,invoiceAmount,invoiceNo,prodId,receiptNo,location,date)values(" + "'" + cName + "'," + "'" + cType + "'," + "'" + itemSold + "'," + "" + unitPr + "," + "" + qtySold + "," + "" + innAmot + ","  + "" + invNum + "," + "'" + prodId + "'," + "" + recNo + "," + "'" + loc + "'," + "'" + date + "'" + ")";
            System.out.println(SET_UP_CUST);
            state.execute(SET_UP_CUST);
            JOptionPane.showMessageDialog(this, "Succesful");
            cTypeCusSetUpTField.setSelectedItem("---Select Type of Customer---");
            cIdTField.setText("");
            phoneTField.setText("");
            cNameCustSetUpTField.setText("");
            cLocationSetUpCustomerTField.setSelectedItem("---Select Customer Location---");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
            
        }
    }
   
    
    
    String retrId = "";
    private String retrCustId(String name){
        try {
            state =  connection.createStatement();
            final String RETR = "Select customer_id from customertable where fullName = " + "'" + name + "'";
            System.out.println(RETR);
            rSet  =  state.executeQuery(RETR);
            if(rSet.next()){
                
                retrId = (String)rSet.getObject("customer_id");
            }   } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
            
        }
   
        return retrId;
    }
   
     private void setUpFreshCustomer(String cName, String cType, String phone, String customerId, String date){
        try {
            state = connection.createStatement();
            final String SET_UP_CUST = "Insert into customertable(fullName, customerType,phone, customer_id, date)values(" + "'" + cName + "'," + "'" + cType + "'," + "'" + phone + "'," + "'" + customerId + "',"  + "'" + date + "'" + ")";
            System.out.println(SET_UP_CUST);
            state.execute(SET_UP_CUST);
            JOptionPane.showMessageDialog(this, "Customer : " + cNameCustSetUpTField.getText() + "  with Customer Id : " + cIdTField.getText() +  "  has being set up succesfully", "Success Alert", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
            
        }
    }
   
    
    
 double totInvAmt = 0.00;
 double ourAmt = 0.00;
 
 Object valAdd = "";
 final double  FINAL_AMT = 0.00;
 double finalamt = 0.00;
 String result = "";
 double vals = 0.00;
 double discVal = 0.00;
 double lastamt = 0.00;
 private double getAmtMinPerc(){
 vals =  Double.parseDouble(percentageTField.getText());
 if(percentageTField.getText().equals("")){
   JOptionPane.showMessageDialog(this, "No percentage supplied yet..Calculation cant be done", "Warning message", JOptionPane.WARNING_MESSAGE);
   
   }
   else{
   discVal = (vals / 100) * genTotalInvAmt();
   lastamt = lastamt - discVal;
   totSalesTField.setText(Double.toString(lastamt));
   

   
   JOptionPane.showMessageDialog(this, "total amt from  :  " + vals + "% discount is : " + lastamt);
   
   
   }     

 
 return lastamt;
 
 }
 
private double genTotalInvAmt(){
    try{vals =  Double.parseDouble(percentageTField.getText());
    
DefaultTableModel defaultTableModel;
defaultTableModel = (DefaultTableModel)catTable.getModel();
for (int i = 0 ; i < defaultTableModel.getRowCount();i++){
   
   valAdd = defaultTableModel.getValueAt(i, 4);
   result = valAdd.toString();
   totInvAmt = Double.parseDouble((result));
     finalamt  = finalamt + totInvAmt;
 }

lastamt = finalamt + 0; 


totSalesTField.setText(Double.toString(lastamt));
    }
    
    catch(NumberFormatException nux){
    JOptionPane.showMessageDialog(this, "Error as a result of : " + nux.getLocalizedMessage());
    }
    catch(HeadlessException ex){
    JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage());
    }
    
        
return lastamt;

}
 

private void insertTotSales(String cId, double amtRec, double ledgBal,double totSales, String date, String loc){
        try {
            state = connection.createStatement();
            final String INS = "insert into totalsales(customer_id, amtRec, ledgBal,  totalSales, date, location)values(" + "'" + cId + "'," + "" + amtRec + ","  +  "" + ledgBal + "," + totSales + "," + "'" + date + "'," + "'" + loc + "'"  +  ")";
            System.out.println(INS);
            state.execute(INS);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getMessage());
        }

}
Object val = "";
   private void getTableVal(){
       
    
      
       
   DefaultTableModel defaultTableModel;
   
   
   defaultTableModel = (DefaultTableModel)catTable.getModel();
    invoiceTable.setModel(defaultTableModel);
   
   
   
   
   
   } 
   
   
   
    public void raiseInv(){
    billerName.setText(cName.getText());
   invDateLabel.setText(getSystemDate());
   printLedgBal.setText(ledgBalTField.getText());

    billerInvNo.setText(retrCustId(cName.getText()));
    totAmtInvLabel.setText(totSalesTField.getText());
    amtRecInvLabel.setText(amtPaid.getText());
    discTField.setText(percentageTField.getText());
    
    }
    public void printComponenet(){

  PrinterJob pj = PrinterJob.getPrinterJob();
  pj.setJobName("");

  pj.setPrintable (new Printable() {    
    public int print(Graphics pg, PageFormat pf, int pageNum){
      if (pageNum > 0){
      return Printable.NO_SUCH_PAGE;
      }

      Graphics2D g2 = (Graphics2D) pg;
      g2.translate(pf.getImageableX(), pf.getImageableY());
      invoicePanel.paint(g2);
      return Printable.PAGE_EXISTS;
    }
  });
  if (pj.printDialog() == false)
  return;

  try {
        pj.print();
  } catch (PrinterException ex) {
       JOptionPane.showMessageDialog(this, "Unable to print as a result of : " + ex.getLocalizedMessage());
  }
}
    
    Statement state;
    DriverManager dManager;
    ResultSet rSet;
    Connection connection;
    final String DATABASE = "jdbc:mysql://localhost:3306/o_odb";
    final String USER_NAME = "root";
    final String PASS_WORD = "";

    private void retrKTDetails(String loc, String prod) {
        try {
            state = connection.createStatement();
            final String RETR_KT_DATA = "Select qty_in_stock, amt_equivalent,unit_price, prod_id from pamp_warehouse where location = " + "'" + loc + "'" + "and prod_type = " + "'" + prod + "'" + "order by id desc";
            System.out.println(RETR_KT_DATA);
            rSet = state.executeQuery(RETR_KT_DATA);
            if (rSet.next()) {
prodPanel.setVisible(true);
                cashEquiTField.setText(Double.toString(rSet.getDouble("amt_equivalent")));
                qtyLeftTField.setText(Integer.toString(rSet.getInt("qty_in_stock")));
                unitPriceTField.setText(Double.toString(rSet.getDouble("unit_price")));
                prodIDTField.setText((String)rSet.getObject("prod_id"));

            }
            else{JOptionPane.showMessageDialog(this, "Nothing found for your location selection...Contact Manager to stock up", "Error Alert", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
         JOptionPane.showMessageDialog(this, "Error as a result of : " + ex.getLocalizedMessage());
        }
    }

    private void initConnection() {

        try {
            connection = DriverManager.getConnection(DATABASE, USER_NAME, PASS_WORD);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Unable to establish connection" + ex);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Unable to establish connection as a result of " + exc);
        } finally {
            JOptionPane.showMessageDialog(this, "Connection Established");
        }
    }
    
        private String getSystemDate(){
String finalDate ;   
int day;
int month;
int year;
Calendar calendar = Calendar.getInstance();
day = calendar.get(Calendar.DATE);
month = calendar.get(Calendar.MONTH) + 1;
year = calendar.get(Calendar.YEAR);
finalDate = String.format(  " %s/ %s/ %s",day,month,year);
systemDate.setText(finalDate);
return finalDate;}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(O_OManagerZone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(O_OManagerZone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(O_OManagerZone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(O_OManagerZone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new O_OManagerZone().setVisible(true);
            }
        });
    }
    
    
    int oldQty = 0;
int newQty = 0;
int finalQty = 0;
double unitPrice = 0.00;
double finalAmtEqui = 0.00;

private double genDistrAmtEquivalent(){
    try{
   unitPrice = Double.parseDouble(unitPriceTField.getText());
   newQty = Integer.parseInt(currentSoldQty.getText());
   finalAmtEqui = unitPrice * newQty;
   goodsCashEqui.setText(Double.toString(finalAmtEqui));}catch(NumberFormatException nux){JOptionPane.showMessageDialog(this,"Error as a result of : " + nux.getMessage());}
return finalAmtEqui;
}





private int retQtyLeft(String descr, String loc){
        try {
            
            
            state =  connection.createStatement();
            final String RET_LAST_QTY = "Select qty_in_stock from pamp_warehouse where prod_type = " + "'" + descr + "'" + " and location = " + "'" + loc + "'" + "order by id desc";
            System.out.println(RET_LAST_QTY);
            rSet = state.executeQuery(RET_LAST_QTY);
            if(rSet.next()){
                newQty = rSet.getInt("qty_in_stock");
                      }
            else{}
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error as a result of " + ex.getLocalizedMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);

            }
 return newQty;
}

private int genQtyRemDist(){
    try{
oldQty = Integer.parseInt(qtyLeftTField.getText());
newQty = Integer.parseInt(currentSoldQty.getText());
if(newQty > oldQty){
JOptionPane.showMessageDialog(this, "Quantity Entered as Sold is more than available stock..Reduce amount " , "Error Alert", JOptionPane.ERROR_MESSAGE);
//amtEquivTField.setText("");
}
else if(newQty == oldQty){
JOptionPane.showMessageDialog(this, "Note that the quantity entered will exhaust the stock..Make sure u fill up", "Warning Message", JOptionPane.WARNING_MESSAGE);
finalQty = oldQty - newQty;
qtyLeftTField.setText(Integer.toString(finalQty));
}
else{
finalQty = oldQty - newQty;
qtyLeftTField.setText(Integer.toString(finalQty));}
    }catch(NumberFormatException nux){
    JOptionPane.showMessageDialog(this, "Error as a result of : " + nux.getMessage(), "Error Alert", JOptionPane.ERROR_MESSAGE);
    }

return finalQty;
}
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amtPaid;
    private javax.swing.JLabel amtRecInvLabel;
    private javax.swing.JTextField amtRecUpDateTField;
    private javax.swing.JLabel billerInvNo;
    private javax.swing.JTextField billerName;
    private javax.swing.JComboBox branchCombo;
    private javax.swing.JButton cAddButton;
    private javax.swing.JTextField cIdTField;
    private javax.swing.JComboBox cLocationSetUpCustomerTField;
    private javax.swing.JTextField cName;
    private javax.swing.JTextField cNameCustSetUpTField;
    private javax.swing.JTextField cSetAddTField;
    private javax.swing.JComboBox cTypeCusSetUpTField;
    public javax.swing.JTextField cashEquiTField;
    private javax.swing.JTable catTable;
    private javax.swing.JTextField currentSoldQty;
    private javax.swing.JTable custDetTable;
    private javax.swing.JTextField discTField;
    private javax.swing.JTextField goodsCashEqui;
    private javax.swing.JLabel invDateLabel;
    private javax.swing.JTextField invNoTField;
    private javax.swing.JPanel invoicePanel;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField ledgBalTField;
    private javax.swing.JTextField ledgUpBalaTField;
    public javax.swing.JLabel managerLabel;
    private javax.swing.JTabbedPane managerTab;
    private javax.swing.JCheckBox markPayment;
    private javax.swing.JTextField percentageTField;
    private javax.swing.JTextField phoneTField;
    private javax.swing.JTextField printLedgBal;
    private javax.swing.JTextField prodIDTField;
    private javax.swing.JPanel prodPanel;
    private javax.swing.JComboBox prodTypeCombo;
    public javax.swing.JTextField qtyLeftTField;
    private javax.swing.JTextField recNoTFielld;
    private javax.swing.JLabel retrLastAmtReceived;
    private javax.swing.JTextField retrLocationUpdate;
    private javax.swing.JScrollPane retrScroll;
    private javax.swing.JTextField retrTField;
    private javax.swing.JPanel retrUpPanel;
    private javax.swing.JComboBox selecRetrCombo;
    public javax.swing.JLabel systemDate;
    private javax.swing.JTextField todaySalesMinusDisc;
    private javax.swing.JTextField todaysCashPlusDiscount;
    private javax.swing.JLabel totAmtInvLabel;
    private javax.swing.JTextField totCashRecTodTField;
    private javax.swing.JTextField totSalesTField;
    public javax.swing.JTextField unitPriceTField;
    private javax.swing.JButton upDateButton;
    private javax.swing.JComboBox upDateTrancCombo;
    // End of variables declaration//GEN-END:variables
}
